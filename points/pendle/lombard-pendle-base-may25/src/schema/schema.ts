
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { String, Int, BigInt, Float, ID, Bytes, Timestamp, Boolean, Int8 } from '@sentio/sdk/store'
import { Entity, Required, One, Many, Column, ListColumn, AbstractEntity } from '@sentio/sdk/store'
import { BigDecimal } from '@sentio/bigdecimal'
import { DatabaseSchema } from '@sentio/sdk'







interface AccountSnapshotConstructorInput {
  id: ID;
  lastUpdatedAt: BigInt;
  lastImpliedHolding: String;
}
@Entity("AccountSnapshot")
export class AccountSnapshot extends AbstractEntity  {

	@Required
	@Column("ID")
	id: ID

	@Required
	@Column("BigInt")
	lastUpdatedAt: BigInt

	@Required
	@Column("String")
	lastImpliedHolding: String
  constructor(data: AccountSnapshotConstructorInput) {super()}
  
}


const source = `type AccountSnapshot @entity {
  id: ID!
  lastUpdatedAt: BigInt!
  lastImpliedHolding: String!
}`
DatabaseSchema.register({
  source,
  entities: {
    "AccountSnapshot": AccountSnapshot
  }
})
