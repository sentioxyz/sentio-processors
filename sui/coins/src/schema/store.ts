
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { String, Int, BigInt, Float, ID, Bytes, Timestamp, Boolean, Int8 } from '@sentio/sdk/store'
import { Entity, Required, One, Many, Column, ListColumn, AbstractEntity } from '@sentio/sdk/store'
import { BigDecimal } from '@sentio/bigdecimal'
import { DatabaseSchema } from '@sentio/sdk'







interface MetadataConstructorInput {
  id: ID;
  coin_type: String;
  name: String;
  symbol: String;
  decimals: Int;
  description: String;
  icon_url?: String;
  digest: String;
  timestamp: Int;
}
@Entity("Metadata")
export class Metadata extends AbstractEntity  {

	@Required
	@Column("ID")
	id: ID

	@Required
	@Column("String")
	coin_type: String

	@Required
	@Column("String")
	name: String

	@Required
	@Column("String")
	symbol: String

	@Required
	@Column("Int")
	decimals: Int

	@Required
	@Column("String")
	description: String

	@Column("String")
	icon_url?: String

	@Required
	@Column("String")
	digest: String

	@Required
	@Column("Int")
	timestamp: Int
  constructor(data: MetadataConstructorInput) {super()}
  
}


const source = `type Metadata @entity {
    id: ID! # Object id for the CoinMetadata object
    coin_type: String! # Type of the coin
    name: String! # Name for the token
    symbol: String! # Symbol for the token
    decimals:  Int!
    description: String! # Description of the token
    icon_url: String
    digest: String! # transaction digest created the metadata
    timestamp: Int! # timestamp of the metadata creation
}`
DatabaseSchema.register({
  source,
  entities: {
    "Metadata": Metadata
  }
})
